{"version":3,"sources":["images/paprika.png","images/compressed-image.png","images/sourcream.png","images/cheese.png","pages/home.js","pages/chips.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","transition","duration","ease","Home","image","imageDetails","className","div","initial","opacity","x","animate","y","exit","scale","rotate","delay","ref","style","width","height","to","src","require","placeholder","img","whileHover","alt","transitionGroup","default","Chips","p","Header","App","render","location","exitBeforeEnter","key","pathname","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad8926fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paprika.f6a3284a.png\";","module.exports = __webpack_public_path__ + \"static/media/compressed-image.4cdfca78.png\";","module.exports = __webpack_public_path__ + \"static/media/sourcream.71efbdde.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese.19ea9f7b.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport ProgressiveImage from \"react-progressive-image\";\n\nconst transition = { duration: 0.6, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst Home = ({ image, imageDetails }) => (\n  <>\n    <main>\n      <div className=\"container\">\n        <div className=\"col-left\">\n          <motion.div\n            initial={{ opacity: 0, x: \"100%\" }}\n            animate={{ y: \"0%\", x: \"0%\", opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={transition}\n            className=\"title\"\n          >\n            <h1>SNACK WITH NO LIMITS</h1>\n            <div className=\"information\">\n              <p>\n                When you're on the go and don't have time to cook, Crave are the\n                perfect snack! Always be prepared for the mid day hunger.\n              </p>\n\n              <button className=\"btn\">Snack now</button>\n            </div>\n          </motion.div>\n        </div>\n\n        <div className=\"col-right\">\n          <div className=\"image-container\">\n            <motion.div\n              initial={{ scale: 0.2, rotate: 180 }}\n              animate={{ scale: 1, rotate: 360 }}\n              exit={{ scale: 1 }}\n              transition={{ delay: 0.1, duration: 1, ...transition }}\n              className=\"thumbnail\"\n              ref={image}\n              style={{\n                width: imageDetails.width,\n                height: imageDetails.height,\n              }}\n            >\n              <div className=\"frame\">\n                <Link to={`/chips/paprika-onion`}>\n                  <ProgressiveImage\n                    src={require(\"../images/paprika.png\")}\n                    placeholder={require(\"../images/compressed-image.png\")}\n                  >\n                    {(src) => (\n                      <motion.img\n                        whileHover={{ rotate: 0 }}\n                        transition={transition}\n                        src={src}\n                        alt=\"Crave chips\"\n                        style={{ rotate: 12 }}\n                        exit={{ x: \"0\", y: \"0\" }}\n                      />\n                    )}\n                  </ProgressiveImage>\n                </Link>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </main>\n  </>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\n//Components\n\n//Ease\nconst transition = { duration: 1.2, ease: [0.43, 0.13, 0.23, 0.96] };\nconst transitionGroup = {\n  delay: 0.5,\n  x: { duration: 1 },\n  default: { ease: \"linear\" },\n};\n\nconst Chips = ({ imageDetails }) => {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      className=\"container fluid\"\n    >\n      <div className=\"row \">\n        <div className=\"group\">\n          <motion.img\n            initial={{ opacity: 0, x: \"100%\" }}\n            animate={{\n              opacity: 1,\n              y: \"0%\",\n              x: \"-10%\",\n              transition: { delay: 1, ...transition },\n              scale: 0.8,\n            }}\n            exit={{ y: \"0%\", x: \"0%\", opacity: 0 }}\n            src={require(\"../images/sourcream.png\")}\n            alt=\"an image\"\n            className=\"image-row right\"\n          />\n          <motion.p\n            initial={{ opacity: 0 }}\n            animate={{\n              opacity: 1,\n              transition: { delay: 4, ...transitionGroup },\n            }}\n            exit={{ opacity: 0 }}\n          >\n            Cool sour cream and herby green onion combo.\n          </motion.p>\n        </div>\n        <div className=\"group\">\n          <motion.img\n            initial={{\n              x: \"95%\",\n              y: \"7.3%\",\n              width: imageDetails.width,\n              height: imageDetails.height,\n            }}\n            animate={{\n              x: \"0%\",\n              y: \"0%\",\n              width: \"100 %\",\n              scale: 1.1,\n              transition: { delay: 0.2, ...transition },\n            }}\n            src={require(\"../images/paprika.png\")}\n            alt=\"an image\"\n            className=\"image-row center\"\n          />\n          <motion.p\n            initial={{ opacity: 0, transition: { transition } }}\n            animate={{\n              opacity: 1,\n              transition: { delay: 4, ...transitionGroup },\n            }}\n            exit={{ opacity: 0 }}\n          >\n            Everyone's favourite.\n            <br /> Try it yourself!\n          </motion.p>\n        </div>\n        <div className=\"group\">\n          <motion.img\n            initial={{ opacity: 0, x: \"-100%\" }}\n            animate={{\n              opacity: 1,\n              y: \"0%\",\n              x: \"10%\",\n              transition: { delay: 1, ...transition },\n              scale: 0.8,\n            }}\n            exit={{ y: \"0%\", x: \"0%\", opacity: 0 }}\n            src={require(\"../images/cheese.png\")}\n            alt=\"an image\"\n            className=\"image-row left\"\n          />\n          <motion.p\n            initial={{ opacity: 0, transition: { transition } }}\n            animate={{\n              opacity: 1,\n              transition: { delay: 4, ...transitionGroup },\n            }}\n            exit={{ opacity: 0 }}\n          >\n            Very CHEEZY!\n          </motion.p>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Chips;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row space-between\">\n          <div className=\"logo\">\n            <Link to=\"/\">CRAVE</Link>\n          </div>\n          <div className=\"menu\">MENU</div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//Pages\nimport Home from \"./pages/home\";\nimport Chips from \"./pages/chips\";\n//components\nimport Header from \"./components/header\";\n//Styles\nimport \"./App.scss\";\n\nconst imageDetails = {\n  width: 400,\n  height: 500,\n};\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route\n        render={({ location }) => (\n          <AnimatePresence //initial={false}\n            exitBeforeEnter\n          >\n            <Switch location={location} key={location.pathname}>\n              <Route\n                exact\n                path=\"/\"\n                render={() => <Home imageDetails={imageDetails} />}\n              />\n              <Route\n                exact\n                path=\"/chips/:id\"\n                render={() => <Chips imageDetails={imageDetails} />}\n              />\n            </Switch>\n          </AnimatePresence>\n        )}\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}